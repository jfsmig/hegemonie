// Copyright (c) 2018-2021 Contributors as noted in the AUTHORS file
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: region.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ArmyCommandType int32

const (
	// A value that should not be encountered.
	ArmyCommandType_Unknown ArmyCommandType = 0
	// Move to the location, disband the army and transfer the units to the
	// local city, if any
	ArmyCommandType_Disband ArmyCommandType = 1
	// Move to the location and hold the position. Like 'Move' but the
	// Useful to let the attitude play and enter attack/defense on local fights
	ArmyCommandType_Wait ArmyCommandType = 2
	// Move to the location. The command expires at the arrival at the position.
	// Useful to let the attitude play and enter attack/defense on local fights
	ArmyCommandType_Move ArmyCommandType = 3
	// Move to the location and join the attack of the city
	ArmyCommandType_Attack ArmyCommandType = 4
	// Move to the location and join the defense of the local city
	ArmyCommandType_Defend ArmyCommandType = 5
)

// Enum value maps for ArmyCommandType.
var (
	ArmyCommandType_name = map[int32]string{
		0: "Unknown",
		1: "Disband",
		2: "Wait",
		3: "Move",
		4: "Attack",
		5: "Defend",
	}
	ArmyCommandType_value = map[string]int32{
		"Unknown": 0,
		"Disband": 1,
		"Wait":    2,
		"Move":    3,
		"Attack":  4,
		"Defend":  5,
	}
)

func (x ArmyCommandType) Enum() *ArmyCommandType {
	p := new(ArmyCommandType)
	*p = x
	return p
}

func (x ArmyCommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArmyCommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_region_proto_enumTypes[0].Descriptor()
}

func (ArmyCommandType) Type() protoreflect.EnumType {
	return &file_region_proto_enumTypes[0]
}

func (x ArmyCommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArmyCommandType.Descriptor instead.
func (ArmyCommandType) EnumDescriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{0}
}

type RegionSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MapName     string `protobuf:"bytes,2,opt,name=mapName,proto3" json:"mapName,omitempty"`
	CountCities uint32 `protobuf:"varint,3,opt,name=countCities,proto3" json:"countCities,omitempty"`
	CountFights uint32 `protobuf:"varint,4,opt,name=countFights,proto3" json:"countFights,omitempty"` // TODO(jfs): Add per-state gauges
}

func (x *RegionSummary) Reset() {
	*x = RegionSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionSummary) ProtoMessage() {}

func (x *RegionSummary) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionSummary.ProtoReflect.Descriptor instead.
func (*RegionSummary) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{0}
}

func (x *RegionSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegionSummary) GetMapName() string {
	if x != nil {
		return x.MapName
	}
	return ""
}

func (x *RegionSummary) GetCountCities() uint32 {
	if x != nil {
		return x.CountCities
	}
	return 0
}

func (x *RegionSummary) GetCountFights() uint32 {
	if x != nil {
		return x.CountFights
	}
	return 0
}

type RegionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *RegionId) Reset() {
	*x = RegionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionId) ProtoMessage() {}

func (x *RegionId) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionId.ProtoReflect.Descriptor instead.
func (*RegionId) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{1}
}

func (x *RegionId) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type ArmyName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ArmyName) Reset() {
	*x = ArmyName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArmyName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmyName) ProtoMessage() {}

func (x *ArmyName) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArmyName.ProtoReflect.Descriptor instead.
func (*ArmyName) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{2}
}

func (x *ArmyName) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ArmyName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Identifies an army managed by the city
type ArmyId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	City   uint64 `protobuf:"varint,2,opt,name=city,proto3" json:"city,omitempty"`
	Army   string `protobuf:"bytes,3,opt,name=army,proto3" json:"army,omitempty"`
}

func (x *ArmyId) Reset() {
	*x = ArmyId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArmyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmyId) ProtoMessage() {}

func (x *ArmyId) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArmyId.ProtoReflect.Descriptor instead.
func (*ArmyId) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{3}
}

func (x *ArmyId) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ArmyId) GetCity() uint64 {
	if x != nil {
		return x.City
	}
	return 0
}

func (x *ArmyId) GetArmy() string {
	if x != nil {
		return x.Army
	}
	return ""
}

type ArmyView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location uint64         `protobuf:"varint,3,opt,name=location,proto3" json:"location,omitempty"`
	Stock    *ResourcesAbs  `protobuf:"bytes,4,opt,name=stock,proto3" json:"stock,omitempty"`
	Units    []*UnitView    `protobuf:"bytes,5,rep,name=units,proto3" json:"units,omitempty"`
	Commands []*ArmyCommand `protobuf:"bytes,6,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *ArmyView) Reset() {
	*x = ArmyView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArmyView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmyView) ProtoMessage() {}

func (x *ArmyView) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArmyView.ProtoReflect.Descriptor instead.
func (*ArmyView) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{4}
}

func (x *ArmyView) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ArmyView) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArmyView) GetLocation() uint64 {
	if x != nil {
		return x.Location
	}
	return 0
}

func (x *ArmyView) GetStock() *ResourcesAbs {
	if x != nil {
		return x.Stock
	}
	return nil
}

func (x *ArmyView) GetUnits() []*UnitView {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *ArmyView) GetCommands() []*ArmyCommand {
	if x != nil {
		return x.Commands
	}
	return nil
}

type TemplateId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TemplateId) Reset() {
	*x = TemplateId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateId) ProtoMessage() {}

func (x *TemplateId) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateId.ProtoReflect.Descriptor instead.
func (*TemplateId) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{5}
}

func (x *TemplateId) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *TemplateId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ResourcesAbs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R0 uint64 `protobuf:"varint,1,opt,name=r0,proto3" json:"r0,omitempty"`
	R1 uint64 `protobuf:"varint,2,opt,name=r1,proto3" json:"r1,omitempty"`
	R2 uint64 `protobuf:"varint,3,opt,name=r2,proto3" json:"r2,omitempty"`
	R3 uint64 `protobuf:"varint,4,opt,name=r3,proto3" json:"r3,omitempty"`
	R4 uint64 `protobuf:"varint,5,opt,name=r4,proto3" json:"r4,omitempty"`
	R5 uint64 `protobuf:"varint,6,opt,name=r5,proto3" json:"r5,omitempty"`
}

func (x *ResourcesAbs) Reset() {
	*x = ResourcesAbs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcesAbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesAbs) ProtoMessage() {}

func (x *ResourcesAbs) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesAbs.ProtoReflect.Descriptor instead.
func (*ResourcesAbs) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{6}
}

func (x *ResourcesAbs) GetR0() uint64 {
	if x != nil {
		return x.R0
	}
	return 0
}

func (x *ResourcesAbs) GetR1() uint64 {
	if x != nil {
		return x.R1
	}
	return 0
}

func (x *ResourcesAbs) GetR2() uint64 {
	if x != nil {
		return x.R2
	}
	return 0
}

func (x *ResourcesAbs) GetR3() uint64 {
	if x != nil {
		return x.R3
	}
	return 0
}

func (x *ResourcesAbs) GetR4() uint64 {
	if x != nil {
		return x.R4
	}
	return 0
}

func (x *ResourcesAbs) GetR5() uint64 {
	if x != nil {
		return x.R5
	}
	return 0
}

type ResourcesPlus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R0 int64 `protobuf:"varint,1,opt,name=r0,proto3" json:"r0,omitempty"`
	R1 int64 `protobuf:"varint,2,opt,name=r1,proto3" json:"r1,omitempty"`
	R2 int64 `protobuf:"varint,3,opt,name=r2,proto3" json:"r2,omitempty"`
	R3 int64 `protobuf:"varint,4,opt,name=r3,proto3" json:"r3,omitempty"`
	R4 int64 `protobuf:"varint,5,opt,name=r4,proto3" json:"r4,omitempty"`
	R5 int64 `protobuf:"varint,6,opt,name=r5,proto3" json:"r5,omitempty"`
}

func (x *ResourcesPlus) Reset() {
	*x = ResourcesPlus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcesPlus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesPlus) ProtoMessage() {}

func (x *ResourcesPlus) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesPlus.ProtoReflect.Descriptor instead.
func (*ResourcesPlus) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{7}
}

func (x *ResourcesPlus) GetR0() int64 {
	if x != nil {
		return x.R0
	}
	return 0
}

func (x *ResourcesPlus) GetR1() int64 {
	if x != nil {
		return x.R1
	}
	return 0
}

func (x *ResourcesPlus) GetR2() int64 {
	if x != nil {
		return x.R2
	}
	return 0
}

func (x *ResourcesPlus) GetR3() int64 {
	if x != nil {
		return x.R3
	}
	return 0
}

func (x *ResourcesPlus) GetR4() int64 {
	if x != nil {
		return x.R4
	}
	return 0
}

func (x *ResourcesPlus) GetR5() int64 {
	if x != nil {
		return x.R5
	}
	return 0
}

type ResourcesMult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R0 float64 `protobuf:"fixed64,1,opt,name=r0,proto3" json:"r0,omitempty"`
	R1 float64 `protobuf:"fixed64,2,opt,name=r1,proto3" json:"r1,omitempty"`
	R2 float64 `protobuf:"fixed64,3,opt,name=r2,proto3" json:"r2,omitempty"`
	R3 float64 `protobuf:"fixed64,4,opt,name=r3,proto3" json:"r3,omitempty"`
	R4 float64 `protobuf:"fixed64,5,opt,name=r4,proto3" json:"r4,omitempty"`
	R5 float64 `protobuf:"fixed64,6,opt,name=r5,proto3" json:"r5,omitempty"`
}

func (x *ResourcesMult) Reset() {
	*x = ResourcesMult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcesMult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesMult) ProtoMessage() {}

func (x *ResourcesMult) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesMult.ProtoReflect.Descriptor instead.
func (*ResourcesMult) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{8}
}

func (x *ResourcesMult) GetR0() float64 {
	if x != nil {
		return x.R0
	}
	return 0
}

func (x *ResourcesMult) GetR1() float64 {
	if x != nil {
		return x.R1
	}
	return 0
}

func (x *ResourcesMult) GetR2() float64 {
	if x != nil {
		return x.R2
	}
	return 0
}

func (x *ResourcesMult) GetR3() float64 {
	if x != nil {
		return x.R3
	}
	return 0
}

func (x *ResourcesMult) GetR4() float64 {
	if x != nil {
		return x.R4
	}
	return 0
}

func (x *ResourcesMult) GetR5() float64 {
	if x != nil {
		return x.R5
	}
	return 0
}

type ResourcesMod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plus *ResourcesPlus `protobuf:"bytes,1,opt,name=plus,proto3" json:"plus,omitempty"`
	Mult *ResourcesMult `protobuf:"bytes,2,opt,name=mult,proto3" json:"mult,omitempty"`
}

func (x *ResourcesMod) Reset() {
	*x = ResourcesMod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcesMod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesMod) ProtoMessage() {}

func (x *ResourcesMod) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesMod.ProtoReflect.Descriptor instead.
func (*ResourcesMod) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{9}
}

func (x *ResourcesMod) GetPlus() *ResourcesPlus {
	if x != nil {
		return x.Plus
	}
	return nil
}

func (x *ResourcesMod) GetMult() *ResourcesMult {
	if x != nil {
		return x.Mult
	}
	return nil
}

type StockView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *ResourcesAbs `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Knowledge *ResourcesMod `protobuf:"bytes,2,opt,name=knowledge,proto3" json:"knowledge,omitempty"`
	Buildings *ResourcesMod `protobuf:"bytes,3,opt,name=buildings,proto3" json:"buildings,omitempty"`
	Troops    *ResourcesMod `protobuf:"bytes,4,opt,name=troops,proto3" json:"troops,omitempty"`
	Actual    *ResourcesAbs `protobuf:"bytes,5,opt,name=actual,proto3" json:"actual,omitempty"`
	Usage     *ResourcesAbs `protobuf:"bytes,6,opt,name=usage,proto3" json:"usage,omitempty"`
}

func (x *StockView) Reset() {
	*x = StockView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockView) ProtoMessage() {}

func (x *StockView) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockView.ProtoReflect.Descriptor instead.
func (*StockView) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{10}
}

func (x *StockView) GetBase() *ResourcesAbs {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *StockView) GetKnowledge() *ResourcesMod {
	if x != nil {
		return x.Knowledge
	}
	return nil
}

func (x *StockView) GetBuildings() *ResourcesMod {
	if x != nil {
		return x.Buildings
	}
	return nil
}

func (x *StockView) GetTroops() *ResourcesMod {
	if x != nil {
		return x.Troops
	}
	return nil
}

func (x *StockView) GetActual() *ResourcesAbs {
	if x != nil {
		return x.Actual
	}
	return nil
}

func (x *StockView) GetUsage() *ResourcesAbs {
	if x != nil {
		return x.Usage
	}
	return nil
}

type ProductionView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *ResourcesAbs `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Knowledge *ResourcesMod `protobuf:"bytes,2,opt,name=knowledge,proto3" json:"knowledge,omitempty"`
	Buildings *ResourcesMod `protobuf:"bytes,3,opt,name=buildings,proto3" json:"buildings,omitempty"`
	Troops    *ResourcesMod `protobuf:"bytes,4,opt,name=troops,proto3" json:"troops,omitempty"`
	Actual    *ResourcesAbs `protobuf:"bytes,5,opt,name=actual,proto3" json:"actual,omitempty"`
}

func (x *ProductionView) Reset() {
	*x = ProductionView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductionView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductionView) ProtoMessage() {}

func (x *ProductionView) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductionView.ProtoReflect.Descriptor instead.
func (*ProductionView) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{11}
}

func (x *ProductionView) GetBase() *ResourcesAbs {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ProductionView) GetKnowledge() *ResourcesMod {
	if x != nil {
		return x.Knowledge
	}
	return nil
}

func (x *ProductionView) GetBuildings() *ResourcesMod {
	if x != nil {
		return x.Buildings
	}
	return nil
}

func (x *ProductionView) GetTroops() *ResourcesMod {
	if x != nil {
		return x.Troops
	}
	return nil
}

func (x *ProductionView) GetActual() *ResourcesAbs {
	if x != nil {
		return x.Actual
	}
	return nil
}

type UnitTypeView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ticks  uint32 `protobuf:"varint,3,opt,name=ticks,proto3" json:"ticks,omitempty"`
	Health uint32 `protobuf:"varint,4,opt,name=health,proto3" json:"health,omitempty"`
}

func (x *UnitTypeView) Reset() {
	*x = UnitTypeView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitTypeView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitTypeView) ProtoMessage() {}

func (x *UnitTypeView) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitTypeView.ProtoReflect.Descriptor instead.
func (*UnitTypeView) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{12}
}

func (x *UnitTypeView) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnitTypeView) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnitTypeView) GetTicks() uint32 {
	if x != nil {
		return x.Ticks
	}
	return 0
}

func (x *UnitTypeView) GetHealth() uint32 {
	if x != nil {
		return x.Health
	}
	return 0
}

type UnitView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Lazily populated
	Type   *UnitTypeView `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id     string        `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	IdType string        `protobuf:"bytes,3,opt,name=idType,proto3" json:"idType,omitempty"`
	Ticks  uint32        `protobuf:"varint,4,opt,name=ticks,proto3" json:"ticks,omitempty"`
	Health uint32        `protobuf:"varint,5,opt,name=health,proto3" json:"health,omitempty"`
}

func (x *UnitView) Reset() {
	*x = UnitView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitView) ProtoMessage() {}

func (x *UnitView) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitView.ProtoReflect.Descriptor instead.
func (*UnitView) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{13}
}

func (x *UnitView) GetType() *UnitTypeView {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *UnitView) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnitView) GetIdType() string {
	if x != nil {
		return x.IdType
	}
	return ""
}

func (x *UnitView) GetTicks() uint32 {
	if x != nil {
		return x.Ticks
	}
	return 0
}

func (x *UnitView) GetHealth() uint32 {
	if x != nil {
		return x.Health
	}
	return 0
}

type BuildingTypeRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ticks uint32 `protobuf:"varint,3,opt,name=ticks,proto3" json:"ticks,omitempty"`
}

func (x *BuildingTypeRef) Reset() {
	*x = BuildingTypeRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildingTypeRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingTypeRef) ProtoMessage() {}

func (x *BuildingTypeRef) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingTypeRef.ProtoReflect.Descriptor instead.
func (*BuildingTypeRef) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{14}
}

func (x *BuildingTypeRef) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BuildingTypeRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BuildingTypeRef) GetTicks() uint32 {
	if x != nil {
		return x.Ticks
	}
	return 0
}

type BuildingTypePublic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cost0    *ResourcesAbs `protobuf:"bytes,1,opt,name=cost0,proto3" json:"cost0,omitempty"`
	Cost     *ResourcesAbs `protobuf:"bytes,2,opt,name=cost,proto3" json:"cost,omitempty"`
	Stock    *ResourcesMod `protobuf:"bytes,3,opt,name=stock,proto3" json:"stock,omitempty"`
	Prod     *ResourcesMod `protobuf:"bytes,4,opt,name=prod,proto3" json:"prod,omitempty"`
	Multiple bool          `protobuf:"varint,5,opt,name=multiple,proto3" json:"multiple,omitempty"`
}

func (x *BuildingTypePublic) Reset() {
	*x = BuildingTypePublic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildingTypePublic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingTypePublic) ProtoMessage() {}

func (x *BuildingTypePublic) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingTypePublic.ProtoReflect.Descriptor instead.
func (*BuildingTypePublic) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{15}
}

func (x *BuildingTypePublic) GetCost0() *ResourcesAbs {
	if x != nil {
		return x.Cost0
	}
	return nil
}

func (x *BuildingTypePublic) GetCost() *ResourcesAbs {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *BuildingTypePublic) GetStock() *ResourcesMod {
	if x != nil {
		return x.Stock
	}
	return nil
}

func (x *BuildingTypePublic) GetProd() *ResourcesMod {
	if x != nil {
		return x.Prod
	}
	return nil
}

func (x *BuildingTypePublic) GetMultiple() bool {
	if x != nil {
		return x.Multiple
	}
	return false
}

type BuildingTypePrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PopBuild     int64    `protobuf:"varint,1,opt,name=popBuild,proto3" json:"popBuild,omitempty"`
	PopFall      int64    `protobuf:"varint,2,opt,name=popFall,proto3" json:"popFall,omitempty"`
	PopDestroy   int64    `protobuf:"varint,3,opt,name=popDestroy,proto3" json:"popDestroy,omitempty"`
	PopDismantle int64    `protobuf:"varint,4,opt,name=popDismantle,proto3" json:"popDismantle,omitempty"`
	Requires     []string `protobuf:"bytes,5,rep,name=requires,proto3" json:"requires,omitempty"`
	Conflicts    []string `protobuf:"bytes,6,rep,name=conflicts,proto3" json:"conflicts,omitempty"`
}

func (x *BuildingTypePrivate) Reset() {
	*x = BuildingTypePrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildingTypePrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingTypePrivate) ProtoMessage() {}

func (x *BuildingTypePrivate) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingTypePrivate.ProtoReflect.Descriptor instead.
func (*BuildingTypePrivate) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{16}
}

func (x *BuildingTypePrivate) GetPopBuild() int64 {
	if x != nil {
		return x.PopBuild
	}
	return 0
}

func (x *BuildingTypePrivate) GetPopFall() int64 {
	if x != nil {
		return x.PopFall
	}
	return 0
}

func (x *BuildingTypePrivate) GetPopDestroy() int64 {
	if x != nil {
		return x.PopDestroy
	}
	return 0
}

func (x *BuildingTypePrivate) GetPopDismantle() int64 {
	if x != nil {
		return x.PopDismantle
	}
	return 0
}

func (x *BuildingTypePrivate) GetRequires() []string {
	if x != nil {
		return x.Requires
	}
	return nil
}

func (x *BuildingTypePrivate) GetConflicts() []string {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

type BuildingTypeView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref     *BuildingTypeRef     `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Public  *BuildingTypePublic  `protobuf:"bytes,2,opt,name=public,proto3" json:"public,omitempty"`
	Private *BuildingTypePrivate `protobuf:"bytes,3,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *BuildingTypeView) Reset() {
	*x = BuildingTypeView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildingTypeView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingTypeView) ProtoMessage() {}

func (x *BuildingTypeView) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingTypeView.ProtoReflect.Descriptor instead.
func (*BuildingTypeView) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{17}
}

func (x *BuildingTypeView) GetRef() *BuildingTypeRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *BuildingTypeView) GetPublic() *BuildingTypePublic {
	if x != nil {
		return x.Public
	}
	return nil
}

func (x *BuildingTypeView) GetPrivate() *BuildingTypePrivate {
	if x != nil {
		return x.Private
	}
	return nil
}

type BuildingView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   *BuildingTypeRef `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id     string           `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	IdType string           `protobuf:"bytes,3,opt,name=idType,proto3" json:"idType,omitempty"`
	Ticks  uint32           `protobuf:"varint,4,opt,name=ticks,proto3" json:"ticks,omitempty"`
}

func (x *BuildingView) Reset() {
	*x = BuildingView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildingView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingView) ProtoMessage() {}

func (x *BuildingView) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingView.ProtoReflect.Descriptor instead.
func (*BuildingView) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{18}
}

func (x *BuildingView) GetType() *BuildingTypeRef {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *BuildingView) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BuildingView) GetIdType() string {
	if x != nil {
		return x.IdType
	}
	return ""
}

func (x *BuildingView) GetTicks() uint32 {
	if x != nil {
		return x.Ticks
	}
	return 0
}

type KnowledgeTypeView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ticks uint32 `protobuf:"varint,3,opt,name=ticks,proto3" json:"ticks,omitempty"`
}

func (x *KnowledgeTypeView) Reset() {
	*x = KnowledgeTypeView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeTypeView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeTypeView) ProtoMessage() {}

func (x *KnowledgeTypeView) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeTypeView.ProtoReflect.Descriptor instead.
func (*KnowledgeTypeView) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{19}
}

func (x *KnowledgeTypeView) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KnowledgeTypeView) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KnowledgeTypeView) GetTicks() uint32 {
	if x != nil {
		return x.Ticks
	}
	return 0
}

type KnowledgeView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   *KnowledgeTypeView `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id     string             `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	IdType string             `protobuf:"bytes,3,opt,name=idType,proto3" json:"idType,omitempty"`
	Ticks  uint32             `protobuf:"varint,4,opt,name=ticks,proto3" json:"ticks,omitempty"`
}

func (x *KnowledgeView) Reset() {
	*x = KnowledgeView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnowledgeView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeView) ProtoMessage() {}

func (x *KnowledgeView) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeView.ProtoReflect.Descriptor instead.
func (*KnowledgeView) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{20}
}

func (x *KnowledgeView) GetType() *KnowledgeTypeView {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *KnowledgeView) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KnowledgeView) GetIdType() string {
	if x != nil {
		return x.IdType
	}
	return ""
}

func (x *KnowledgeView) GetTicks() uint32 {
	if x != nil {
		return x.Ticks
	}
	return 0
}

// Fully identifies a City.
type CityId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	City   uint64 `protobuf:"varint,2,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *CityId) Reset() {
	*x = CityId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityId) ProtoMessage() {}

func (x *CityId) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityId.ProtoReflect.Descriptor instead.
func (*CityId) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{21}
}

func (x *CityId) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CityId) GetCity() uint64 {
	if x != nil {
		return x.City
	}
	return 0
}

type CityKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	City   uint64 `protobuf:"varint,2,opt,name=city,proto3" json:"city,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CityKey) Reset() {
	*x = CityKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityKey) ProtoMessage() {}

func (x *CityKey) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityKey.ProtoReflect.Descriptor instead.
func (*CityKey) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{22}
}

func (x *CityKey) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CityKey) GetCity() uint64 {
	if x != nil {
		return x.City
	}
	return 0
}

func (x *CityKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CityConstants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alignment int32  `protobuf:"varint,1,opt,name=alignment,proto3" json:"alignment,omitempty"`
	Chaos     int32  `protobuf:"varint,2,opt,name=chaos,proto3" json:"chaos,omitempty"`
	Politics  uint32 `protobuf:"varint,3,opt,name=politics,proto3" json:"politics,omitempty"`
	Cult      uint32 `protobuf:"varint,4,opt,name=cult,proto3" json:"cult,omitempty"`
	Ethny     uint32 `protobuf:"varint,5,opt,name=ethny,proto3" json:"ethny,omitempty"`
}

func (x *CityConstants) Reset() {
	*x = CityConstants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityConstants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityConstants) ProtoMessage() {}

func (x *CityConstants) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityConstants.ProtoReflect.Descriptor instead.
func (*CityConstants) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{23}
}

func (x *CityConstants) GetAlignment() int32 {
	if x != nil {
		return x.Alignment
	}
	return 0
}

func (x *CityConstants) GetChaos() int32 {
	if x != nil {
		return x.Chaos
	}
	return 0
}

func (x *CityConstants) GetPolitics() uint32 {
	if x != nil {
		return x.Politics
	}
	return 0
}

func (x *CityConstants) GetCult() uint32 {
	if x != nil {
		return x.Cult
	}
	return 0
}

func (x *CityConstants) GetEthny() uint32 {
	if x != nil {
		return x.Ethny
	}
	return 0
}

type CityVars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermPop          int64  `protobuf:"varint,2,opt,name=permPop,proto3" json:"permPop,omitempty"`
	PermHealth       int64  `protobuf:"varint,3,opt,name=permHealth,proto3" json:"permHealth,omitempty"`
	PermIntelligence int64  `protobuf:"varint,4,opt,name=permIntelligence,proto3" json:"permIntelligence,omitempty"`
	TickMassacres    uint32 `protobuf:"varint,5,opt,name=tickMassacres,proto3" json:"tickMassacres,omitempty"`
}

func (x *CityVars) Reset() {
	*x = CityVars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityVars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityVars) ProtoMessage() {}

func (x *CityVars) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityVars.ProtoReflect.Descriptor instead.
func (*CityVars) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{24}
}

func (x *CityVars) GetPermPop() int64 {
	if x != nil {
		return x.PermPop
	}
	return 0
}

func (x *CityVars) GetPermHealth() int64 {
	if x != nil {
		return x.PermHealth
	}
	return 0
}

func (x *CityVars) GetPermIntelligence() int64 {
	if x != nil {
		return x.PermIntelligence
	}
	return 0
}

func (x *CityVars) GetTickMassacres() uint32 {
	if x != nil {
		return x.TickMassacres
	}
	return 0
}

type CityPolitics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Overlord uint64   `protobuf:"varint,1,opt,name=overlord,proto3" json:"overlord,omitempty"`
	Lieges   []uint64 `protobuf:"varint,2,rep,packed,name=lieges,proto3" json:"lieges,omitempty"`
}

func (x *CityPolitics) Reset() {
	*x = CityPolitics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityPolitics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityPolitics) ProtoMessage() {}

func (x *CityPolitics) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityPolitics.ProtoReflect.Descriptor instead.
func (*CityPolitics) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{25}
}

func (x *CityPolitics) GetOverlord() uint64 {
	if x != nil {
		return x.Overlord
	}
	return 0
}

func (x *CityPolitics) GetLieges() []uint64 {
	if x != nil {
		return x.Lieges
	}
	return nil
}

type CityStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Gauges
	StockCapacity  *ResourcesAbs `protobuf:"bytes,1,opt,name=stockCapacity,proto3" json:"stockCapacity,omitempty"`
	StockUsage     *ResourcesAbs `protobuf:"bytes,2,opt,name=stockUsage,proto3" json:"stockUsage,omitempty"`
	ScoreBuilding  uint64        `protobuf:"varint,3,opt,name=scoreBuilding,proto3" json:"scoreBuilding,omitempty"`
	ScoreKnowledge uint64        `protobuf:"varint,4,opt,name=scoreKnowledge,proto3" json:"scoreKnowledge,omitempty"`
	ScoreArmy      uint64        `protobuf:"varint,5,opt,name=scoreArmy,proto3" json:"scoreArmy,omitempty"`
	Popularity     int64         `protobuf:"varint,6,opt,name=popularity,proto3" json:"popularity,omitempty"`
	// Counters
	ResourceProduced *ResourcesAbs `protobuf:"bytes,8,opt,name=resourceProduced,proto3" json:"resourceProduced,omitempty"`
	ResourceSent     *ResourcesAbs `protobuf:"bytes,9,opt,name=resourceSent,proto3" json:"resourceSent,omitempty"`
	ResourceReceived *ResourcesAbs `protobuf:"bytes,10,opt,name=resourceReceived,proto3" json:"resourceReceived,omitempty"`
	TaxSent          *ResourcesAbs `protobuf:"bytes,11,opt,name=taxSent,proto3" json:"taxSent,omitempty"`
	TaxReceived      *ResourcesAbs `protobuf:"bytes,12,opt,name=taxReceived,proto3" json:"taxReceived,omitempty"`
	Moves            uint64        `protobuf:"varint,13,opt,name=moves,proto3" json:"moves,omitempty"`
	UnitRaised       uint64        `protobuf:"varint,14,opt,name=unitRaised,proto3" json:"unitRaised,omitempty"`
	UnitLost         uint64        `protobuf:"varint,15,opt,name=unitLost,proto3" json:"unitLost,omitempty"`
	FightJoined      uint64        `protobuf:"varint,16,opt,name=fightJoined,proto3" json:"fightJoined,omitempty"`
	FightLeft        uint64        `protobuf:"varint,17,opt,name=fightLeft,proto3" json:"fightLeft,omitempty"`
	FightWon         uint64        `protobuf:"varint,18,opt,name=fightWon,proto3" json:"fightWon,omitempty"`
	FightLost        uint64        `protobuf:"varint,19,opt,name=fightLost,proto3" json:"fightLost,omitempty"`
}

func (x *CityStats) Reset() {
	*x = CityStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityStats) ProtoMessage() {}

func (x *CityStats) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityStats.ProtoReflect.Descriptor instead.
func (*CityStats) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{26}
}

func (x *CityStats) GetStockCapacity() *ResourcesAbs {
	if x != nil {
		return x.StockCapacity
	}
	return nil
}

func (x *CityStats) GetStockUsage() *ResourcesAbs {
	if x != nil {
		return x.StockUsage
	}
	return nil
}

func (x *CityStats) GetScoreBuilding() uint64 {
	if x != nil {
		return x.ScoreBuilding
	}
	return 0
}

func (x *CityStats) GetScoreKnowledge() uint64 {
	if x != nil {
		return x.ScoreKnowledge
	}
	return 0
}

func (x *CityStats) GetScoreArmy() uint64 {
	if x != nil {
		return x.ScoreArmy
	}
	return 0
}

func (x *CityStats) GetPopularity() int64 {
	if x != nil {
		return x.Popularity
	}
	return 0
}

func (x *CityStats) GetResourceProduced() *ResourcesAbs {
	if x != nil {
		return x.ResourceProduced
	}
	return nil
}

func (x *CityStats) GetResourceSent() *ResourcesAbs {
	if x != nil {
		return x.ResourceSent
	}
	return nil
}

func (x *CityStats) GetResourceReceived() *ResourcesAbs {
	if x != nil {
		return x.ResourceReceived
	}
	return nil
}

func (x *CityStats) GetTaxSent() *ResourcesAbs {
	if x != nil {
		return x.TaxSent
	}
	return nil
}

func (x *CityStats) GetTaxReceived() *ResourcesAbs {
	if x != nil {
		return x.TaxReceived
	}
	return nil
}

func (x *CityStats) GetMoves() uint64 {
	if x != nil {
		return x.Moves
	}
	return 0
}

func (x *CityStats) GetUnitRaised() uint64 {
	if x != nil {
		return x.UnitRaised
	}
	return 0
}

func (x *CityStats) GetUnitLost() uint64 {
	if x != nil {
		return x.UnitLost
	}
	return 0
}

func (x *CityStats) GetFightJoined() uint64 {
	if x != nil {
		return x.FightJoined
	}
	return 0
}

func (x *CityStats) GetFightLeft() uint64 {
	if x != nil {
		return x.FightLeft
	}
	return 0
}

func (x *CityStats) GetFightWon() uint64 {
	if x != nil {
		return x.FightWon
	}
	return 0
}

func (x *CityStats) GetFightLost() uint64 {
	if x != nil {
		return x.FightLost
	}
	return 0
}

type CityEvolution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KFrontier []*KnowledgeTypeView `protobuf:"bytes,1,rep,name=kFrontier,proto3" json:"kFrontier,omitempty"`
	BFrontier []*BuildingTypeRef   `protobuf:"bytes,2,rep,name=bFrontier,proto3" json:"bFrontier,omitempty"`
	UFrontier []*UnitTypeView      `protobuf:"bytes,3,rep,name=uFrontier,proto3" json:"uFrontier,omitempty"`
}

func (x *CityEvolution) Reset() {
	*x = CityEvolution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityEvolution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityEvolution) ProtoMessage() {}

func (x *CityEvolution) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityEvolution.ProtoReflect.Descriptor instead.
func (*CityEvolution) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{27}
}

func (x *CityEvolution) GetKFrontier() []*KnowledgeTypeView {
	if x != nil {
		return x.KFrontier
	}
	return nil
}

func (x *CityEvolution) GetBFrontier() []*BuildingTypeRef {
	if x != nil {
		return x.BFrontier
	}
	return nil
}

func (x *CityEvolution) GetUFrontier() []*UnitTypeView {
	if x != nil {
		return x.UFrontier
	}
	return nil
}

type CityAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Units      []*UnitView      `protobuf:"bytes,1,rep,name=units,proto3" json:"units,omitempty"`
	Buildings  []*BuildingView  `protobuf:"bytes,2,rep,name=buildings,proto3" json:"buildings,omitempty"`
	Knowledges []*KnowledgeView `protobuf:"bytes,3,rep,name=knowledges,proto3" json:"knowledges,omitempty"`
	Armies     []*ArmyView      `protobuf:"bytes,4,rep,name=armies,proto3" json:"armies,omitempty"`
}

func (x *CityAssets) Reset() {
	*x = CityAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityAssets) ProtoMessage() {}

func (x *CityAssets) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityAssets.ProtoReflect.Descriptor instead.
func (*CityAssets) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{28}
}

func (x *CityAssets) GetUnits() []*UnitView {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *CityAssets) GetBuildings() []*BuildingView {
	if x != nil {
		return x.Buildings
	}
	return nil
}

func (x *CityAssets) GetKnowledges() []*KnowledgeView {
	if x != nil {
		return x.Knowledges
	}
	return nil
}

func (x *CityAssets) GetArmies() []*ArmyView {
	if x != nil {
		return x.Armies
	}
	return nil
}

type CityTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region        string         `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Name          string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Constants     *CityConstants `protobuf:"bytes,3,opt,name=constants,proto3" json:"constants,omitempty"`
	Stock         *ResourcesAbs  `protobuf:"bytes,4,opt,name=stock,proto3" json:"stock,omitempty"`
	StockCapacity *ResourcesAbs  `protobuf:"bytes,5,opt,name=stockCapacity,proto3" json:"stockCapacity,omitempty"`
	Production    *ResourcesAbs  `protobuf:"bytes,6,opt,name=production,proto3" json:"production,omitempty"`
	BuildingTypes []string       `protobuf:"bytes,7,rep,name=buildingTypes,proto3" json:"buildingTypes,omitempty"`
	SkillTypes    []string       `protobuf:"bytes,8,rep,name=skillTypes,proto3" json:"skillTypes,omitempty"`
	UnitTypes     []string       `protobuf:"bytes,9,rep,name=unitTypes,proto3" json:"unitTypes,omitempty"`
}

func (x *CityTemplate) Reset() {
	*x = CityTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityTemplate) ProtoMessage() {}

func (x *CityTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityTemplate.ProtoReflect.Descriptor instead.
func (*CityTemplate) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{29}
}

func (x *CityTemplate) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CityTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CityTemplate) GetConstants() *CityConstants {
	if x != nil {
		return x.Constants
	}
	return nil
}

func (x *CityTemplate) GetStock() *ResourcesAbs {
	if x != nil {
		return x.Stock
	}
	return nil
}

func (x *CityTemplate) GetStockCapacity() *ResourcesAbs {
	if x != nil {
		return x.StockCapacity
	}
	return nil
}

func (x *CityTemplate) GetProduction() *ResourcesAbs {
	if x != nil {
		return x.Production
	}
	return nil
}

func (x *CityTemplate) GetBuildingTypes() []string {
	if x != nil {
		return x.BuildingTypes
	}
	return nil
}

func (x *CityTemplate) GetSkillTypes() []string {
	if x != nil {
		return x.SkillTypes
	}
	return nil
}

func (x *CityTemplate) GetUnitTypes() []string {
	if x != nil {
		return x.UnitTypes
	}
	return nil
}

type CityView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       *CityKey       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Owner     string         `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	State     uint32         `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	Politics  *CityPolitics  `protobuf:"bytes,7,opt,name=politics,proto3" json:"politics,omitempty"`
	Constants *CityConstants `protobuf:"bytes,4,opt,name=constants,proto3" json:"constants,omitempty"`
	Variables *CityVars      `protobuf:"bytes,6,opt,name=variables,proto3" json:"variables,omitempty"`
	// The resources owned by the City
	Stock      *StockView      `protobuf:"bytes,8,opt,name=stock,proto3" json:"stock,omitempty"`
	Production *ProductionView `protobuf:"bytes,9,opt,name=production,proto3" json:"production,omitempty"`
	// All the things owned by the current city
	Assets *CityAssets `protobuf:"bytes,10,opt,name=assets,proto3" json:"assets,omitempty"`
	// All the things that the current may start to own
	Evol *CityEvolution `protobuf:"bytes,11,opt,name=evol,proto3" json:"evol,omitempty"`
}

func (x *CityView) Reset() {
	*x = CityView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityView) ProtoMessage() {}

func (x *CityView) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityView.ProtoReflect.Descriptor instead.
func (*CityView) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{30}
}

func (x *CityView) GetKey() *CityKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *CityView) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CityView) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CityView) GetPolitics() *CityPolitics {
	if x != nil {
		return x.Politics
	}
	return nil
}

func (x *CityView) GetConstants() *CityConstants {
	if x != nil {
		return x.Constants
	}
	return nil
}

func (x *CityView) GetVariables() *CityVars {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *CityView) GetStock() *StockView {
	if x != nil {
		return x.Stock
	}
	return nil
}

func (x *CityView) GetProduction() *ProductionView {
	if x != nil {
		return x.Production
	}
	return nil
}

func (x *CityView) GetAssets() *CityAssets {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *CityView) GetEvol() *CityEvolution {
	if x != nil {
		return x.Evol
	}
	return nil
}

type Artifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IdType string `protobuf:"bytes,2,opt,name=idType,proto3" json:"idType,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{31}
}

func (x *Artifact) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Artifact) GetIdType() string {
	if x != nil {
		return x.IdType
	}
	return ""
}

func (x *Artifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CityStatsRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City  *CityKey   `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Stats *CityStats `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *CityStatsRecord) Reset() {
	*x = CityStatsRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityStatsRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityStatsRecord) ProtoMessage() {}

func (x *CityStatsRecord) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityStatsRecord.ProtoReflect.Descriptor instead.
func (*CityStatsRecord) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{32}
}

func (x *CityStatsRecord) GetCity() *CityKey {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *CityStatsRecord) GetStats() *CityStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type LifecycleAbstractReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City *CityId `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *LifecycleAbstractReq) Reset() {
	*x = LifecycleAbstractReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LifecycleAbstractReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LifecycleAbstractReq) ProtoMessage() {}

func (x *LifecycleAbstractReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LifecycleAbstractReq.ProtoReflect.Descriptor instead.
func (*LifecycleAbstractReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{33}
}

func (x *LifecycleAbstractReq) GetCity() *CityId {
	if x != nil {
		return x.City
	}
	return nil
}

type LifecycleAssignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City *CityId `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	User string  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *LifecycleAssignReq) Reset() {
	*x = LifecycleAssignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LifecycleAssignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LifecycleAssignReq) ProtoMessage() {}

func (x *LifecycleAssignReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LifecycleAssignReq.ProtoReflect.Descriptor instead.
func (*LifecycleAssignReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{34}
}

func (x *LifecycleAssignReq) GetCity() *CityId {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *LifecycleAssignReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type StudyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City          *CityId `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	KnowledgeType string  `protobuf:"bytes,2,opt,name=knowledgeType,proto3" json:"knowledgeType,omitempty"`
}

func (x *StudyReq) Reset() {
	*x = StudyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyReq) ProtoMessage() {}

func (x *StudyReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyReq.ProtoReflect.Descriptor instead.
func (*StudyReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{35}
}

func (x *StudyReq) GetCity() *CityId {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *StudyReq) GetKnowledgeType() string {
	if x != nil {
		return x.KnowledgeType
	}
	return ""
}

type TrainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City     *CityId `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	UnitType string  `protobuf:"bytes,2,opt,name=unitType,proto3" json:"unitType,omitempty"`
}

func (x *TrainReq) Reset() {
	*x = TrainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainReq) ProtoMessage() {}

func (x *TrainReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainReq.ProtoReflect.Descriptor instead.
func (*TrainReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{36}
}

func (x *TrainReq) GetCity() *CityId {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *TrainReq) GetUnitType() string {
	if x != nil {
		return x.UnitType
	}
	return ""
}

type BuildReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City         *CityId `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	BuildingType string  `protobuf:"bytes,2,opt,name=buildingType,proto3" json:"buildingType,omitempty"`
}

func (x *BuildReq) Reset() {
	*x = BuildReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildReq) ProtoMessage() {}

func (x *BuildReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildReq.ProtoReflect.Descriptor instead.
func (*BuildReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{37}
}

func (x *BuildReq) GetCity() *CityId {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *BuildReq) GetBuildingType() string {
	if x != nil {
		return x.BuildingType
	}
	return ""
}

type CreateTransportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City   *CityId       `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Name   string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Target uint64        `protobuf:"varint,3,opt,name=target,proto3" json:"target,omitempty"`
	Stock  *ResourcesAbs `protobuf:"bytes,4,opt,name=stock,proto3" json:"stock,omitempty"`
}

func (x *CreateTransportReq) Reset() {
	*x = CreateTransportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransportReq) ProtoMessage() {}

func (x *CreateTransportReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransportReq.ProtoReflect.Descriptor instead.
func (*CreateTransportReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{38}
}

func (x *CreateTransportReq) GetCity() *CityId {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *CreateTransportReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTransportReq) GetTarget() uint64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *CreateTransportReq) GetStock() *ResourcesAbs {
	if x != nil {
		return x.Stock
	}
	return nil
}

type CreateArmyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City *CityId  `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Name string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Unit []string `protobuf:"bytes,3,rep,name=unit,proto3" json:"unit,omitempty"`
}

func (x *CreateArmyReq) Reset() {
	*x = CreateArmyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArmyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArmyReq) ProtoMessage() {}

func (x *CreateArmyReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArmyReq.ProtoReflect.Descriptor instead.
func (*CreateArmyReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{39}
}

func (x *CreateArmyReq) GetCity() *CityId {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *CreateArmyReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateArmyReq) GetUnit() []string {
	if x != nil {
		return x.Unit
	}
	return nil
}

type TransferUnitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City *CityId  `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Army string   `protobuf:"bytes,3,opt,name=army,proto3" json:"army,omitempty"`
	Unit []string `protobuf:"bytes,4,rep,name=unit,proto3" json:"unit,omitempty"`
}

func (x *TransferUnitReq) Reset() {
	*x = TransferUnitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferUnitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferUnitReq) ProtoMessage() {}

func (x *TransferUnitReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferUnitReq.ProtoReflect.Descriptor instead.
func (*TransferUnitReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{40}
}

func (x *TransferUnitReq) GetCity() *CityId {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *TransferUnitReq) GetArmy() string {
	if x != nil {
		return x.Army
	}
	return ""
}

func (x *TransferUnitReq) GetUnit() []string {
	if x != nil {
		return x.Unit
	}
	return nil
}

type TransferResourcesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City  *CityId       `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Army  string        `protobuf:"bytes,3,opt,name=army,proto3" json:"army,omitempty"`
	Stock *ResourcesAbs `protobuf:"bytes,4,opt,name=stock,proto3" json:"stock,omitempty"`
}

func (x *TransferResourcesReq) Reset() {
	*x = TransferResourcesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferResourcesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResourcesReq) ProtoMessage() {}

func (x *TransferResourcesReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResourcesReq.ProtoReflect.Descriptor instead.
func (*TransferResourcesReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{41}
}

func (x *TransferResourcesReq) GetCity() *CityId {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *TransferResourcesReq) GetArmy() string {
	if x != nil {
		return x.Army
	}
	return ""
}

func (x *TransferResourcesReq) GetStock() *ResourcesAbs {
	if x != nil {
		return x.Stock
	}
	return nil
}

type CitiesByOwnerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	User   string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Marker uint64 `protobuf:"varint,3,opt,name=marker,proto3" json:"marker,omitempty"`
}

func (x *CitiesByOwnerReq) Reset() {
	*x = CitiesByOwnerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CitiesByOwnerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CitiesByOwnerReq) ProtoMessage() {}

func (x *CitiesByOwnerReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CitiesByOwnerReq.ProtoReflect.Descriptor instead.
func (*CitiesByOwnerReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{42}
}

func (x *CitiesByOwnerReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CitiesByOwnerReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CitiesByOwnerReq) GetMarker() uint64 {
	if x != nil {
		return x.Marker
	}
	return 0
}

type RegionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameMarker string `protobuf:"bytes,1,opt,name=nameMarker,proto3" json:"nameMarker,omitempty"`
}

func (x *RegionListReq) Reset() {
	*x = RegionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionListReq) ProtoMessage() {}

func (x *RegionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionListReq.ProtoReflect.Descriptor instead.
func (*RegionListReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{43}
}

func (x *RegionListReq) GetNameMarker() string {
	if x != nil {
		return x.NameMarker
	}
	return ""
}

type RegionCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MapName string `protobuf:"bytes,2,opt,name=mapName,proto3" json:"mapName,omitempty"`
}

func (x *RegionCreateReq) Reset() {
	*x = RegionCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionCreateReq) ProtoMessage() {}

func (x *RegionCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionCreateReq.ProtoReflect.Descriptor instead.
func (*RegionCreateReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{44}
}

func (x *RegionCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegionCreateReq) GetMapName() string {
	if x != nil {
		return x.MapName
	}
	return ""
}

type LifecycleConfigureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	City   uint64 `protobuf:"varint,2,opt,name=city,proto3" json:"city,omitempty"`
	Model  string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *LifecycleConfigureReq) Reset() {
	*x = LifecycleConfigureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LifecycleConfigureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LifecycleConfigureReq) ProtoMessage() {}

func (x *LifecycleConfigureReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LifecycleConfigureReq.ProtoReflect.Descriptor instead.
func (*LifecycleConfigureReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{45}
}

func (x *LifecycleConfigureReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *LifecycleConfigureReq) GetCity() uint64 {
	if x != nil {
		return x.City
	}
	return 0
}

func (x *LifecycleConfigureReq) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type CityTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Optional
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional
	Tpl *CityTemplate `protobuf:"bytes,3,opt,name=tpl,proto3" json:"tpl,omitempty"`
}

func (x *CityTemplateReq) Reset() {
	*x = CityTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityTemplateReq) ProtoMessage() {}

func (x *CityTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityTemplateReq.ProtoReflect.Descriptor instead.
func (*CityTemplateReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{46}
}

func (x *CityTemplateReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CityTemplateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CityTemplateReq) GetTpl() *CityTemplate {
	if x != nil {
		return x.Tpl
	}
	return nil
}

type ArmyMoveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *ArmyId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Target uint64  `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	// What to do at the destination
	Args *ArmyMoveArgs `protobuf:"bytes,3,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *ArmyMoveReq) Reset() {
	*x = ArmyMoveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArmyMoveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmyMoveReq) ProtoMessage() {}

func (x *ArmyMoveReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArmyMoveReq.ProtoReflect.Descriptor instead.
func (*ArmyMoveReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{47}
}

func (x *ArmyMoveReq) GetId() *ArmyId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ArmyMoveReq) GetTarget() uint64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *ArmyMoveReq) GetArgs() *ArmyMoveArgs {
	if x != nil {
		return x.Args
	}
	return nil
}

type ArmyMoveArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resources to be given to the local City
	Stock *ResourcesAbs `protobuf:"bytes,1,opt,name=stock,proto3" json:"stock,omitempty"`
	// Artifacts to be dropped
	Artifacts []uint64 `protobuf:"varint,2,rep,packed,name=artifacts,proto3" json:"artifacts,omitempty"`
	// Units to be transferred to the local City
	Units []uint64 `protobuf:"varint,3,rep,packed,name=units,proto3" json:"units,omitempty"`
}

func (x *ArmyMoveArgs) Reset() {
	*x = ArmyMoveArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArmyMoveArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmyMoveArgs) ProtoMessage() {}

func (x *ArmyMoveArgs) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArmyMoveArgs.ProtoReflect.Descriptor instead.
func (*ArmyMoveArgs) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{48}
}

func (x *ArmyMoveArgs) GetStock() *ResourcesAbs {
	if x != nil {
		return x.Stock
	}
	return nil
}

func (x *ArmyMoveArgs) GetArtifacts() []uint64 {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *ArmyMoveArgs) GetUnits() []uint64 {
	if x != nil {
		return x.Units
	}
	return nil
}

type ArmyAssaultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *ArmyId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique ID of the map cell (which must have a city settled)
	Target uint64 `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	// What to do upon victory
	Args *ArmyAssaultArgs `protobuf:"bytes,3,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *ArmyAssaultReq) Reset() {
	*x = ArmyAssaultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArmyAssaultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmyAssaultReq) ProtoMessage() {}

func (x *ArmyAssaultReq) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArmyAssaultReq.ProtoReflect.Descriptor instead.
func (*ArmyAssaultReq) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{49}
}

func (x *ArmyAssaultReq) GetId() *ArmyId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ArmyAssaultReq) GetTarget() uint64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *ArmyAssaultReq) GetArgs() *ArmyAssaultArgs {
	if x != nil {
		return x.Args
	}
	return nil
}

type ArmyAssaultArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Massacre the peasants to force a production drop
	Massacre bool `protobuf:"varint,1,opt,name=massacre,proto3" json:"massacre,omitempty"`
	// Become overlord of the victim, in case of victory
	Overlord bool `protobuf:"varint,2,opt,name=overlord,proto3" json:"overlord,omitempty"`
	// Break a random building, in case of victory
	Break bool `protobuf:"varint,3,opt,name=break,proto3" json:"break,omitempty"`
}

func (x *ArmyAssaultArgs) Reset() {
	*x = ArmyAssaultArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArmyAssaultArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmyAssaultArgs) ProtoMessage() {}

func (x *ArmyAssaultArgs) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArmyAssaultArgs.ProtoReflect.Descriptor instead.
func (*ArmyAssaultArgs) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{50}
}

func (x *ArmyAssaultArgs) GetMassacre() bool {
	if x != nil {
		return x.Massacre
	}
	return false
}

func (x *ArmyAssaultArgs) GetOverlord() bool {
	if x != nil {
		return x.Overlord
	}
	return false
}

func (x *ArmyAssaultArgs) GetBreak() bool {
	if x != nil {
		return x.Break
	}
	return false
}

type ArmyTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *ArmyId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Target uint64  `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *ArmyTarget) Reset() {
	*x = ArmyTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArmyTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmyTarget) ProtoMessage() {}

func (x *ArmyTarget) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArmyTarget.ProtoReflect.Descriptor instead.
func (*ArmyTarget) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{51}
}

func (x *ArmyTarget) GetId() *ArmyId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ArmyTarget) GetTarget() uint64 {
	if x != nil {
		return x.Target
	}
	return 0
}

type ArmyCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target uint64          `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	Type   ArmyCommandType `protobuf:"varint,2,opt,name=type,proto3,enum=hege.reg.ArmyCommandType" json:"type,omitempty"`
	// Optional field that may be set in case of move
	Move *ArmyMoveArgs `protobuf:"bytes,3,opt,name=move,proto3" json:"move,omitempty"`
	// Optional field that may be set in case of attack
	Attack *ArmyAssaultArgs `protobuf:"bytes,4,opt,name=attack,proto3" json:"attack,omitempty"`
}

func (x *ArmyCommand) Reset() {
	*x = ArmyCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArmyCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmyCommand) ProtoMessage() {}

func (x *ArmyCommand) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArmyCommand.ProtoReflect.Descriptor instead.
func (*ArmyCommand) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{52}
}

func (x *ArmyCommand) GetTarget() uint64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *ArmyCommand) GetType() ArmyCommandType {
	if x != nil {
		return x.Type
	}
	return ArmyCommandType_Unknown
}

func (x *ArmyCommand) GetMove() *ArmyMoveArgs {
	if x != nil {
		return x.Move
	}
	return nil
}

func (x *ArmyCommand) GetAttack() *ArmyAssaultArgs {
	if x != nil {
		return x.Attack
	}
	return nil
}

type None struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *None) Reset() {
	*x = None{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *None) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*None) ProtoMessage() {}

func (x *None) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use None.ProtoReflect.Descriptor instead.
func (*None) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{53}
}

type Created struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Created) Reset() {
	*x = Created{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Created) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Created) ProtoMessage() {}

func (x *Created) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Created.ProtoReflect.Descriptor instead.
func (*Created) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{54}
}

func (x *Created) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PaginatedU64Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Marker uint64 `protobuf:"varint,2,opt,name=marker,proto3" json:"marker,omitempty"`
}

func (x *PaginatedU64Query) Reset() {
	*x = PaginatedU64Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginatedU64Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedU64Query) ProtoMessage() {}

func (x *PaginatedU64Query) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedU64Query.ProtoReflect.Descriptor instead.
func (*PaginatedU64Query) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{55}
}

func (x *PaginatedU64Query) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *PaginatedU64Query) GetMarker() uint64 {
	if x != nil {
		return x.Marker
	}
	return 0
}

type PaginatedStrQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Marker string `protobuf:"bytes,2,opt,name=marker,proto3" json:"marker,omitempty"`
}

func (x *PaginatedStrQuery) Reset() {
	*x = PaginatedStrQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginatedStrQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginatedStrQuery) ProtoMessage() {}

func (x *PaginatedStrQuery) ProtoReflect() protoreflect.Message {
	mi := &file_region_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginatedStrQuery.ProtoReflect.Descriptor instead.
func (*PaginatedStrQuery) Descriptor() ([]byte, []int) {
	return file_region_proto_rawDescGZIP(), []int{56}
}

func (x *PaginatedStrQuery) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *PaginatedStrQuery) GetMarker() string {
	if x != nil {
		return x.Marker
	}
	return ""
}

var File_region_proto protoreflect.FileDescriptor

var file_region_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x46, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x22, 0x0a, 0x08,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x22, 0x2e, 0x0a, 0x08, 0x41, 0x72, 0x6d, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x48, 0x0a, 0x06, 0x41, 0x72, 0x6d, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x6d, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x6d, 0x79, 0x22, 0xd5, 0x01, 0x0a, 0x08, 0x41,
	0x72, 0x6d, 0x79, 0x56, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x05,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e,
	0x55, 0x6e, 0x69, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12,
	0x31, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x22, 0x34, 0x0a, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x30, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x72, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x72, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x72, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x33, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x72, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x34, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x72, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x35, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x72, 0x35, 0x22, 0x6f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x6c, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x30, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x72, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x72, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x32, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x72, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x33, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x72, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x34, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x72, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x35, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x72, 0x35, 0x22, 0x6f, 0x0a, 0x0d, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x30,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x31,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x32,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x33,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x34,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x35,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72, 0x35, 0x22, 0x68, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d, 0x6f, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x70, 0x6c,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e,
	0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x6c, 0x75,
	0x73, 0x52, 0x04, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x52, 0x04,
	0x6d, 0x75, 0x6c, 0x74, 0x22, 0xb1, 0x02, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x2a, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x09, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d, 0x6f, 0x64, 0x52, 0x09, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d, 0x6f, 0x64, 0x52,
	0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x74, 0x72,
	0x6f, 0x6f, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d,
	0x6f, 0x64, 0x52, 0x06, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41,
	0x62, 0x73, 0x52, 0x06, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62,
	0x73, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x22, 0x88, 0x02, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2a, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62,
	0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d,
	0x6f, 0x64, 0x52, 0x09, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x34, 0x0a,
	0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x4d, 0x6f, 0x64, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d, 0x6f, 0x64, 0x52, 0x06, 0x74, 0x72, 0x6f,
	0x6f, 0x70, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x22, 0x60, 0x0a, 0x0c, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x63, 0x6b, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x22, 0x4b, 0x0a, 0x0f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x63, 0x6b,
	0x73, 0x22, 0xe4, 0x01, 0x0a, 0x12, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x05, 0x63, 0x6f, 0x73, 0x74,
	0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x52,
	0x05, 0x63, 0x6f, 0x73, 0x74, 0x30, 0x12, 0x2a, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x04, 0x63, 0x6f,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d, 0x6f, 0x64, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x2a, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x4d, 0x6f, 0x64, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x13, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x70, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x70, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x6f, 0x70, 0x46, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70,
	0x6f, 0x70, 0x46, 0x61, 0x6c, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x70, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6f, 0x70, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6f, 0x70, 0x44, 0x69, 0x73,
	0x6d, 0x61, 0x6e, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x6f,
	0x70, 0x44, 0x69, 0x73, 0x6d, 0x61, 0x6e, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x6c,
	0x69, 0x63, 0x74, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x10, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2b, 0x0a, 0x03, 0x72, 0x65, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x37, 0x0a, 0x07,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x07, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x7b, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x66, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x63,
	0x6b, 0x73, 0x22, 0x4d, 0x0a, 0x11, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x63, 0x6b,
	0x73, 0x22, 0x7e, 0x0a, 0x0d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x63, 0x6b,
	0x73, 0x22, 0x34, 0x0a, 0x06, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x49, 0x0a, 0x07, 0x43, 0x69, 0x74, 0x79, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x68, 0x61, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x74, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x74, 0x68, 0x6e,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x74, 0x68, 0x6e, 0x79, 0x22, 0x96,
	0x01, 0x0a, 0x08, 0x43, 0x69, 0x74, 0x79, 0x56, 0x61, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x65, 0x72, 0x6d, 0x50, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65,
	0x72, 0x6d, 0x50, 0x6f, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x6d, 0x49, 0x6e, 0x74,
	0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x70, 0x65, 0x72, 0x6d, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x63, 0x72,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x4d, 0x61,
	0x73, 0x73, 0x61, 0x63, 0x72, 0x65, 0x73, 0x22, 0x42, 0x0a, 0x0c, 0x43, 0x69, 0x74, 0x79, 0x50,
	0x6f, 0x6c, 0x69, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x6c,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x6c,
	0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x65, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x69, 0x65, 0x67, 0x65, 0x73, 0x22, 0x89, 0x06, 0x0a, 0x09,
	0x43, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65,
	0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x41, 0x62, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x41, 0x72, 0x6d, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x41, 0x72, 0x6d, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x10, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x10, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x64, 0x12,
	0x3a, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x10, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12,
	0x30, 0x0a, 0x07, 0x74, 0x61, 0x78, 0x53, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x07, 0x74, 0x61, 0x78, 0x53, 0x65, 0x6e,
	0x74, 0x12, 0x38, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x0b,
	0x74, 0x61, 0x78, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x76, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x52, 0x61, 0x69, 0x73, 0x65, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x52, 0x61, 0x69, 0x73, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x69, 0x67, 0x68, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x66, 0x69, 0x67, 0x68, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x66, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x67, 0x68, 0x74, 0x57, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x66, 0x69, 0x67, 0x68, 0x74, 0x57, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x67,
	0x68, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x69,
	0x67, 0x68, 0x74, 0x4c, 0x6f, 0x73, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x0d, 0x43, 0x69, 0x74, 0x79,
	0x45, 0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x09, 0x6b, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68,
	0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x09, 0x6b, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x69, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x62, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x66, 0x52, 0x09, 0x62, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x12, 0x34, 0x0a,
	0x09, 0x75, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x09, 0x75, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x69, 0x65, 0x72, 0x22, 0xd1, 0x01, 0x0a, 0x0a, 0x43, 0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x55, 0x6e, 0x69,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x09,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x56, 0x69, 0x65, 0x77, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x0a, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x61,
	0x72, 0x6d, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x65,
	0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x06, 0x61, 0x72, 0x6d, 0x69, 0x65, 0x73, 0x22, 0xf9, 0x02, 0x0a, 0x0c, 0x43, 0x69, 0x74, 0x79,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41,
	0x62, 0x73, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65,
	0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x41, 0x62, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x22, 0xb8, 0x03, 0x0a, 0x08, 0x43, 0x69, 0x74, 0x79, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x23, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x69, 0x63, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x74, 0x69, 0x63, 0x73, 0x52, 0x08, 0x70, 0x6f, 0x6c,
	0x69, 0x74, 0x69, 0x63, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e,
	0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x73, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x09,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x56,
	0x61, 0x72, 0x73, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x12, 0x2b, 0x0a, 0x04, 0x65, 0x76, 0x6f, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x45,
	0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x65, 0x76, 0x6f, 0x6c, 0x22, 0x46,
	0x0a, 0x08, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x0f, 0x43, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0x3c, 0x0a, 0x14, 0x4c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x4e, 0x0a, 0x12, 0x4c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x24, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x08, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x4c, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x65,
	0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x54, 0x0a, 0x08, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x65, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2c,
	0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x5d, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x6d, 0x79, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x65,
	0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x5f, 0x0a, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x24,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68,
	0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x6d, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x6d, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x7e, 0x0a, 0x14,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x6d, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x6d, 0x79, 0x12, 0x2c,
	0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x41, 0x62, 0x73, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x56, 0x0a, 0x10,
	0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x72, 0x22, 0x2f, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x15, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x22, 0x63, 0x0a, 0x0f, 0x43, 0x69, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x03,
	0x74, 0x70, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x03, 0x74, 0x70, 0x6c, 0x22, 0x73, 0x0a, 0x0b, 0x41, 0x72, 0x6d, 0x79, 0x4d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d,
	0x79, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x2a, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x4d, 0x6f, 0x76,
	0x65, 0x41, 0x72, 0x67, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x70, 0x0a, 0x0c, 0x41,
	0x72, 0x6d, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41,
	0x62, 0x73, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x22, 0x79, 0x0a,
	0x0e, 0x41, 0x72, 0x6d, 0x79, 0x41, 0x73, 0x73, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x65,
	0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x49, 0x64, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x41, 0x73, 0x73, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x72,
	0x67, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x5f, 0x0a, 0x0f, 0x41, 0x72, 0x6d, 0x79,
	0x41, 0x73, 0x73, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x63, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x63, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x6c,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x6c,
	0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x22, 0x46, 0x0a, 0x0a, 0x41, 0x72, 0x6d,
	0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41,
	0x72, 0x6d, 0x79, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x41, 0x72, 0x6d, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x6f, 0x76, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x41, 0x72, 0x67, 0x73, 0x52, 0x04,
	0x6d, 0x6f, 0x76, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e,
	0x41, 0x72, 0x6d, 0x79, 0x41, 0x73, 0x73, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x72, 0x67, 0x73, 0x52,
	0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x22, 0x06, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x22,
	0x19, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x55, 0x36, 0x34, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x22,
	0x43, 0x0a, 0x11, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x72, 0x2a, 0x57, 0x0a, 0x0f, 0x41, 0x72, 0x6d, 0x79, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x61, 0x69, 0x74, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4d,
	0x6f, 0x76, 0x65, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x10,
	0x04, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x10, 0x05, 0x32, 0x7a, 0x0a,
	0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x3e, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x50, 0x75, 0x73, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x32, 0x80, 0x05, 0x0a, 0x0a, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x12, 0x12, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x04, 0x4d, 0x6f, 0x76,
	0x65, 0x12, 0x12, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67,
	0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x19, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x22, 0x00, 0x30, 0x01, 0x12, 0x33, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x10, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x56, 0x69, 0x65, 0x77, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x12, 0x4c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x12, 0x1f, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f,
	0x6e, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0f, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1c, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67,
	0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x4c, 0x69, 0x66, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x41,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x10,
	0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73,
	0x12, 0x1e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4c, 0x69, 0x66, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x10, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53,
	0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x41, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0e, 0x4c, 0x69, 0x66, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x41,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x32, 0x8e, 0x01, 0x0a,
	0x06, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x43, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x09,
	0x41, 0x6c, 0x6c, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x68, 0x65, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x67, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x55, 0x36,
	0x34, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x11, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x00, 0x30, 0x01, 0x32, 0x90, 0x02,
	0x0a, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x68,
	0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x74, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e, 0x68, 0x65, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x40, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x68, 0x65, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e,
	0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e,
	0x72, 0x65, 0x67, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x1a, 0x0e,
	0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00,
	0x32, 0xf1, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x44, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x1b, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4c, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1b, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x1a, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x4e, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x1a, 0x1b, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x22, 0x00, 0x30, 0x01, 0x32, 0xf4, 0x01, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x47, 0x0a, 0x12, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67,
	0x2e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x10, 0x4c, 0x69, 0x66, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x12, 0x10, 0x2e, 0x68,
	0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x1a, 0x0e,
	0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00,
	0x12, 0x34, 0x0a, 0x0e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x12, 0x10, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e,
	0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0d, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x12, 0x10, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x32, 0xb9, 0x04, 0x0a, 0x04,
	0x43, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x68,
	0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e,
	0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x31, 0x0a, 0x07, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x12, 0x10, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x68,
	0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x56, 0x69, 0x65, 0x77,
	0x22, 0x00, 0x12, 0x2d, 0x0a, 0x05, 0x53, 0x74, 0x75, 0x64, 0x79, 0x12, 0x12, 0x2e, 0x68, 0x65,
	0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22,
	0x00, 0x12, 0x2d, 0x0a, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x12, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0e,
	0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00,
	0x12, 0x2d, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x2e, 0x68, 0x65, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x6d, 0x79, 0x12, 0x17, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x72, 0x6d, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x2e, 0x68, 0x65,
	0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65,
	0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x2e, 0x68, 0x65,
	0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x55,
	0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12,
	0x36, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x6d, 0x69, 0x65, 0x73, 0x12, 0x10, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x64, 0x1a,
	0x12, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x00, 0x30, 0x01, 0x32, 0xb8, 0x03, 0x0a, 0x04, 0x41, 0x72, 0x6d, 0x79,
	0x12, 0x2e, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x10, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e,
	0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x56, 0x69, 0x65, 0x77, 0x22, 0x00,
	0x12, 0x2c, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x10, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x68,
	0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x2a,
	0x0a, 0x04, 0x46, 0x6c, 0x65, 0x61, 0x12, 0x10, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65,
	0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e,
	0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x04, 0x46, 0x6c,
	0x69, 0x70, 0x12, 0x10, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72,
	0x6d, 0x79, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e,
	0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x15,
	0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x4d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67,
	0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x04, 0x57, 0x61, 0x69, 0x74, 0x12,
	0x14, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67,
	0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x12, 0x18, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d,
	0x79, 0x41, 0x73, 0x73, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x68, 0x65,
	0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12, 0x30, 0x0a,
	0x06, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72,
	0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x0e, 0x2e,
	0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x00, 0x12,
	0x31, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x2e, 0x68, 0x65, 0x67,
	0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x1a, 0x0e, 0x2e, 0x68, 0x65, 0x67, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x2e, 0x4e, 0x6f, 0x6e, 0x65,
	0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_region_proto_rawDescOnce sync.Once
	file_region_proto_rawDescData = file_region_proto_rawDesc
)

func file_region_proto_rawDescGZIP() []byte {
	file_region_proto_rawDescOnce.Do(func() {
		file_region_proto_rawDescData = protoimpl.X.CompressGZIP(file_region_proto_rawDescData)
	})
	return file_region_proto_rawDescData
}

var file_region_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_region_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_region_proto_goTypes = []interface{}{
	(ArmyCommandType)(0),          // 0: hege.reg.ArmyCommandType
	(*RegionSummary)(nil),         // 1: hege.reg.RegionSummary
	(*RegionId)(nil),              // 2: hege.reg.RegionId
	(*ArmyName)(nil),              // 3: hege.reg.ArmyName
	(*ArmyId)(nil),                // 4: hege.reg.ArmyId
	(*ArmyView)(nil),              // 5: hege.reg.ArmyView
	(*TemplateId)(nil),            // 6: hege.reg.TemplateId
	(*ResourcesAbs)(nil),          // 7: hege.reg.ResourcesAbs
	(*ResourcesPlus)(nil),         // 8: hege.reg.ResourcesPlus
	(*ResourcesMult)(nil),         // 9: hege.reg.ResourcesMult
	(*ResourcesMod)(nil),          // 10: hege.reg.ResourcesMod
	(*StockView)(nil),             // 11: hege.reg.StockView
	(*ProductionView)(nil),        // 12: hege.reg.ProductionView
	(*UnitTypeView)(nil),          // 13: hege.reg.UnitTypeView
	(*UnitView)(nil),              // 14: hege.reg.UnitView
	(*BuildingTypeRef)(nil),       // 15: hege.reg.BuildingTypeRef
	(*BuildingTypePublic)(nil),    // 16: hege.reg.BuildingTypePublic
	(*BuildingTypePrivate)(nil),   // 17: hege.reg.BuildingTypePrivate
	(*BuildingTypeView)(nil),      // 18: hege.reg.BuildingTypeView
	(*BuildingView)(nil),          // 19: hege.reg.BuildingView
	(*KnowledgeTypeView)(nil),     // 20: hege.reg.KnowledgeTypeView
	(*KnowledgeView)(nil),         // 21: hege.reg.KnowledgeView
	(*CityId)(nil),                // 22: hege.reg.CityId
	(*CityKey)(nil),               // 23: hege.reg.CityKey
	(*CityConstants)(nil),         // 24: hege.reg.CityConstants
	(*CityVars)(nil),              // 25: hege.reg.CityVars
	(*CityPolitics)(nil),          // 26: hege.reg.CityPolitics
	(*CityStats)(nil),             // 27: hege.reg.CityStats
	(*CityEvolution)(nil),         // 28: hege.reg.CityEvolution
	(*CityAssets)(nil),            // 29: hege.reg.CityAssets
	(*CityTemplate)(nil),          // 30: hege.reg.CityTemplate
	(*CityView)(nil),              // 31: hege.reg.CityView
	(*Artifact)(nil),              // 32: hege.reg.Artifact
	(*CityStatsRecord)(nil),       // 33: hege.reg.CityStatsRecord
	(*LifecycleAbstractReq)(nil),  // 34: hege.reg.LifecycleAbstractReq
	(*LifecycleAssignReq)(nil),    // 35: hege.reg.LifecycleAssignReq
	(*StudyReq)(nil),              // 36: hege.reg.StudyReq
	(*TrainReq)(nil),              // 37: hege.reg.TrainReq
	(*BuildReq)(nil),              // 38: hege.reg.BuildReq
	(*CreateTransportReq)(nil),    // 39: hege.reg.CreateTransportReq
	(*CreateArmyReq)(nil),         // 40: hege.reg.CreateArmyReq
	(*TransferUnitReq)(nil),       // 41: hege.reg.TransferUnitReq
	(*TransferResourcesReq)(nil),  // 42: hege.reg.TransferResourcesReq
	(*CitiesByOwnerReq)(nil),      // 43: hege.reg.CitiesByOwnerReq
	(*RegionListReq)(nil),         // 44: hege.reg.RegionListReq
	(*RegionCreateReq)(nil),       // 45: hege.reg.RegionCreateReq
	(*LifecycleConfigureReq)(nil), // 46: hege.reg.LifecycleConfigureReq
	(*CityTemplateReq)(nil),       // 47: hege.reg.CityTemplateReq
	(*ArmyMoveReq)(nil),           // 48: hege.reg.ArmyMoveReq
	(*ArmyMoveArgs)(nil),          // 49: hege.reg.ArmyMoveArgs
	(*ArmyAssaultReq)(nil),        // 50: hege.reg.ArmyAssaultReq
	(*ArmyAssaultArgs)(nil),       // 51: hege.reg.ArmyAssaultArgs
	(*ArmyTarget)(nil),            // 52: hege.reg.ArmyTarget
	(*ArmyCommand)(nil),           // 53: hege.reg.ArmyCommand
	(*None)(nil),                  // 54: hege.reg.None
	(*Created)(nil),               // 55: hege.reg.Created
	(*PaginatedU64Query)(nil),     // 56: hege.reg.PaginatedU64Query
	(*PaginatedStrQuery)(nil),     // 57: hege.reg.PaginatedStrQuery
}
var file_region_proto_depIdxs = []int32{
	7,   // 0: hege.reg.ArmyView.stock:type_name -> hege.reg.ResourcesAbs
	14,  // 1: hege.reg.ArmyView.units:type_name -> hege.reg.UnitView
	53,  // 2: hege.reg.ArmyView.commands:type_name -> hege.reg.ArmyCommand
	8,   // 3: hege.reg.ResourcesMod.plus:type_name -> hege.reg.ResourcesPlus
	9,   // 4: hege.reg.ResourcesMod.mult:type_name -> hege.reg.ResourcesMult
	7,   // 5: hege.reg.StockView.base:type_name -> hege.reg.ResourcesAbs
	10,  // 6: hege.reg.StockView.knowledge:type_name -> hege.reg.ResourcesMod
	10,  // 7: hege.reg.StockView.buildings:type_name -> hege.reg.ResourcesMod
	10,  // 8: hege.reg.StockView.troops:type_name -> hege.reg.ResourcesMod
	7,   // 9: hege.reg.StockView.actual:type_name -> hege.reg.ResourcesAbs
	7,   // 10: hege.reg.StockView.usage:type_name -> hege.reg.ResourcesAbs
	7,   // 11: hege.reg.ProductionView.base:type_name -> hege.reg.ResourcesAbs
	10,  // 12: hege.reg.ProductionView.knowledge:type_name -> hege.reg.ResourcesMod
	10,  // 13: hege.reg.ProductionView.buildings:type_name -> hege.reg.ResourcesMod
	10,  // 14: hege.reg.ProductionView.troops:type_name -> hege.reg.ResourcesMod
	7,   // 15: hege.reg.ProductionView.actual:type_name -> hege.reg.ResourcesAbs
	13,  // 16: hege.reg.UnitView.type:type_name -> hege.reg.UnitTypeView
	7,   // 17: hege.reg.BuildingTypePublic.cost0:type_name -> hege.reg.ResourcesAbs
	7,   // 18: hege.reg.BuildingTypePublic.cost:type_name -> hege.reg.ResourcesAbs
	10,  // 19: hege.reg.BuildingTypePublic.stock:type_name -> hege.reg.ResourcesMod
	10,  // 20: hege.reg.BuildingTypePublic.prod:type_name -> hege.reg.ResourcesMod
	15,  // 21: hege.reg.BuildingTypeView.ref:type_name -> hege.reg.BuildingTypeRef
	16,  // 22: hege.reg.BuildingTypeView.public:type_name -> hege.reg.BuildingTypePublic
	17,  // 23: hege.reg.BuildingTypeView.private:type_name -> hege.reg.BuildingTypePrivate
	15,  // 24: hege.reg.BuildingView.type:type_name -> hege.reg.BuildingTypeRef
	20,  // 25: hege.reg.KnowledgeView.type:type_name -> hege.reg.KnowledgeTypeView
	7,   // 26: hege.reg.CityStats.stockCapacity:type_name -> hege.reg.ResourcesAbs
	7,   // 27: hege.reg.CityStats.stockUsage:type_name -> hege.reg.ResourcesAbs
	7,   // 28: hege.reg.CityStats.resourceProduced:type_name -> hege.reg.ResourcesAbs
	7,   // 29: hege.reg.CityStats.resourceSent:type_name -> hege.reg.ResourcesAbs
	7,   // 30: hege.reg.CityStats.resourceReceived:type_name -> hege.reg.ResourcesAbs
	7,   // 31: hege.reg.CityStats.taxSent:type_name -> hege.reg.ResourcesAbs
	7,   // 32: hege.reg.CityStats.taxReceived:type_name -> hege.reg.ResourcesAbs
	20,  // 33: hege.reg.CityEvolution.kFrontier:type_name -> hege.reg.KnowledgeTypeView
	15,  // 34: hege.reg.CityEvolution.bFrontier:type_name -> hege.reg.BuildingTypeRef
	13,  // 35: hege.reg.CityEvolution.uFrontier:type_name -> hege.reg.UnitTypeView
	14,  // 36: hege.reg.CityAssets.units:type_name -> hege.reg.UnitView
	19,  // 37: hege.reg.CityAssets.buildings:type_name -> hege.reg.BuildingView
	21,  // 38: hege.reg.CityAssets.knowledges:type_name -> hege.reg.KnowledgeView
	5,   // 39: hege.reg.CityAssets.armies:type_name -> hege.reg.ArmyView
	24,  // 40: hege.reg.CityTemplate.constants:type_name -> hege.reg.CityConstants
	7,   // 41: hege.reg.CityTemplate.stock:type_name -> hege.reg.ResourcesAbs
	7,   // 42: hege.reg.CityTemplate.stockCapacity:type_name -> hege.reg.ResourcesAbs
	7,   // 43: hege.reg.CityTemplate.production:type_name -> hege.reg.ResourcesAbs
	23,  // 44: hege.reg.CityView.key:type_name -> hege.reg.CityKey
	26,  // 45: hege.reg.CityView.politics:type_name -> hege.reg.CityPolitics
	24,  // 46: hege.reg.CityView.constants:type_name -> hege.reg.CityConstants
	25,  // 47: hege.reg.CityView.variables:type_name -> hege.reg.CityVars
	11,  // 48: hege.reg.CityView.stock:type_name -> hege.reg.StockView
	12,  // 49: hege.reg.CityView.production:type_name -> hege.reg.ProductionView
	29,  // 50: hege.reg.CityView.assets:type_name -> hege.reg.CityAssets
	28,  // 51: hege.reg.CityView.evol:type_name -> hege.reg.CityEvolution
	23,  // 52: hege.reg.CityStatsRecord.city:type_name -> hege.reg.CityKey
	27,  // 53: hege.reg.CityStatsRecord.stats:type_name -> hege.reg.CityStats
	22,  // 54: hege.reg.LifecycleAbstractReq.city:type_name -> hege.reg.CityId
	22,  // 55: hege.reg.LifecycleAssignReq.city:type_name -> hege.reg.CityId
	22,  // 56: hege.reg.StudyReq.city:type_name -> hege.reg.CityId
	22,  // 57: hege.reg.TrainReq.city:type_name -> hege.reg.CityId
	22,  // 58: hege.reg.BuildReq.city:type_name -> hege.reg.CityId
	22,  // 59: hege.reg.CreateTransportReq.city:type_name -> hege.reg.CityId
	7,   // 60: hege.reg.CreateTransportReq.stock:type_name -> hege.reg.ResourcesAbs
	22,  // 61: hege.reg.CreateArmyReq.city:type_name -> hege.reg.CityId
	22,  // 62: hege.reg.TransferUnitReq.city:type_name -> hege.reg.CityId
	22,  // 63: hege.reg.TransferResourcesReq.city:type_name -> hege.reg.CityId
	7,   // 64: hege.reg.TransferResourcesReq.stock:type_name -> hege.reg.ResourcesAbs
	30,  // 65: hege.reg.CityTemplateReq.tpl:type_name -> hege.reg.CityTemplate
	4,   // 66: hege.reg.ArmyMoveReq.id:type_name -> hege.reg.ArmyId
	49,  // 67: hege.reg.ArmyMoveReq.args:type_name -> hege.reg.ArmyMoveArgs
	7,   // 68: hege.reg.ArmyMoveArgs.stock:type_name -> hege.reg.ResourcesAbs
	4,   // 69: hege.reg.ArmyAssaultReq.id:type_name -> hege.reg.ArmyId
	51,  // 70: hege.reg.ArmyAssaultReq.args:type_name -> hege.reg.ArmyAssaultArgs
	4,   // 71: hege.reg.ArmyTarget.id:type_name -> hege.reg.ArmyId
	0,   // 72: hege.reg.ArmyCommand.type:type_name -> hege.reg.ArmyCommandType
	49,  // 73: hege.reg.ArmyCommand.move:type_name -> hege.reg.ArmyMoveArgs
	51,  // 74: hege.reg.ArmyCommand.attack:type_name -> hege.reg.ArmyAssaultArgs
	45,  // 75: hege.reg.Admin.CreateRegion:input_type -> hege.reg.RegionCreateReq
	2,   // 76: hege.reg.Admin.PushStats:input_type -> hege.reg.RegionId
	2,   // 77: hege.reg.GameMaster.Produce:input_type -> hege.reg.RegionId
	2,   // 78: hege.reg.GameMaster.Move:input_type -> hege.reg.RegionId
	2,   // 79: hege.reg.GameMaster.GetStats:input_type -> hege.reg.RegionId
	22,  // 80: hege.reg.GameMaster.GetDetail:input_type -> hege.reg.CityId
	46,  // 81: hege.reg.GameMaster.LifecycleConfigure:input_type -> hege.reg.LifecycleConfigureReq
	35,  // 82: hege.reg.GameMaster.LifecycleAssign:input_type -> hege.reg.LifecycleAssignReq
	34,  // 83: hege.reg.GameMaster.LifecycleResume:input_type -> hege.reg.LifecycleAbstractReq
	34,  // 84: hege.reg.GameMaster.LifecycleDismiss:input_type -> hege.reg.LifecycleAbstractReq
	34,  // 85: hege.reg.GameMaster.LifecycleSuspend:input_type -> hege.reg.LifecycleAbstractReq
	34,  // 86: hege.reg.GameMaster.LifecycleReset:input_type -> hege.reg.LifecycleAbstractReq
	44,  // 87: hege.reg.Public.ListRegions:input_type -> hege.reg.RegionListReq
	56,  // 88: hege.reg.Public.AllCities:input_type -> hege.reg.PaginatedU64Query
	57,  // 89: hege.reg.Templates.ListTemplates:input_type -> hege.reg.PaginatedStrQuery
	47,  // 90: hege.reg.Templates.CreateTemplate:input_type -> hege.reg.CityTemplateReq
	47,  // 91: hege.reg.Templates.UpdateTemplate:input_type -> hege.reg.CityTemplateReq
	6,   // 92: hege.reg.Templates.DeleteTemplate:input_type -> hege.reg.TemplateId
	57,  // 93: hege.reg.Definitions.ListUnits:input_type -> hege.reg.PaginatedStrQuery
	57,  // 94: hege.reg.Definitions.ListBuildings:input_type -> hege.reg.PaginatedStrQuery
	57,  // 95: hege.reg.Definitions.ListKnowledges:input_type -> hege.reg.PaginatedStrQuery
	46,  // 96: hege.reg.Player.LifecycleConfigure:input_type -> hege.reg.LifecycleConfigureReq
	22,  // 97: hege.reg.Player.LifecycleAcquire:input_type -> hege.reg.CityId
	22,  // 98: hege.reg.Player.LifecycleLeave:input_type -> hege.reg.CityId
	22,  // 99: hege.reg.Player.LifecycleAuto:input_type -> hege.reg.CityId
	43,  // 100: hege.reg.City.List:input_type -> hege.reg.CitiesByOwnerReq
	22,  // 101: hege.reg.City.ShowAll:input_type -> hege.reg.CityId
	36,  // 102: hege.reg.City.Study:input_type -> hege.reg.StudyReq
	38,  // 103: hege.reg.City.Build:input_type -> hege.reg.BuildReq
	37,  // 104: hege.reg.City.Train:input_type -> hege.reg.TrainReq
	40,  // 105: hege.reg.City.CreateArmy:input_type -> hege.reg.CreateArmyReq
	39,  // 106: hege.reg.City.CreateTransport:input_type -> hege.reg.CreateTransportReq
	41,  // 107: hege.reg.City.TransferUnit:input_type -> hege.reg.TransferUnitReq
	42,  // 108: hege.reg.City.TransferResources:input_type -> hege.reg.TransferResourcesReq
	22,  // 109: hege.reg.City.ListArmies:input_type -> hege.reg.CityId
	4,   // 110: hege.reg.Army.Show:input_type -> hege.reg.ArmyId
	4,   // 111: hege.reg.Army.Cancel:input_type -> hege.reg.ArmyId
	4,   // 112: hege.reg.Army.Flea:input_type -> hege.reg.ArmyId
	4,   // 113: hege.reg.Army.Flip:input_type -> hege.reg.ArmyId
	48,  // 114: hege.reg.Army.Move:input_type -> hege.reg.ArmyMoveReq
	52,  // 115: hege.reg.Army.Wait:input_type -> hege.reg.ArmyTarget
	50,  // 116: hege.reg.Army.Attack:input_type -> hege.reg.ArmyAssaultReq
	52,  // 117: hege.reg.Army.Defend:input_type -> hege.reg.ArmyTarget
	52,  // 118: hege.reg.Army.Disband:input_type -> hege.reg.ArmyTarget
	55,  // 119: hege.reg.Admin.CreateRegion:output_type -> hege.reg.Created
	54,  // 120: hege.reg.Admin.PushStats:output_type -> hege.reg.None
	54,  // 121: hege.reg.GameMaster.Produce:output_type -> hege.reg.None
	54,  // 122: hege.reg.GameMaster.Move:output_type -> hege.reg.None
	33,  // 123: hege.reg.GameMaster.GetStats:output_type -> hege.reg.CityStatsRecord
	31,  // 124: hege.reg.GameMaster.GetDetail:output_type -> hege.reg.CityView
	54,  // 125: hege.reg.GameMaster.LifecycleConfigure:output_type -> hege.reg.None
	54,  // 126: hege.reg.GameMaster.LifecycleAssign:output_type -> hege.reg.None
	54,  // 127: hege.reg.GameMaster.LifecycleResume:output_type -> hege.reg.None
	54,  // 128: hege.reg.GameMaster.LifecycleDismiss:output_type -> hege.reg.None
	54,  // 129: hege.reg.GameMaster.LifecycleSuspend:output_type -> hege.reg.None
	54,  // 130: hege.reg.GameMaster.LifecycleReset:output_type -> hege.reg.None
	1,   // 131: hege.reg.Public.ListRegions:output_type -> hege.reg.RegionSummary
	23,  // 132: hege.reg.Public.AllCities:output_type -> hege.reg.CityKey
	30,  // 133: hege.reg.Templates.ListTemplates:output_type -> hege.reg.CityTemplate
	55,  // 134: hege.reg.Templates.CreateTemplate:output_type -> hege.reg.Created
	54,  // 135: hege.reg.Templates.UpdateTemplate:output_type -> hege.reg.None
	54,  // 136: hege.reg.Templates.DeleteTemplate:output_type -> hege.reg.None
	13,  // 137: hege.reg.Definitions.ListUnits:output_type -> hege.reg.UnitTypeView
	18,  // 138: hege.reg.Definitions.ListBuildings:output_type -> hege.reg.BuildingTypeView
	20,  // 139: hege.reg.Definitions.ListKnowledges:output_type -> hege.reg.KnowledgeTypeView
	54,  // 140: hege.reg.Player.LifecycleConfigure:output_type -> hege.reg.None
	54,  // 141: hege.reg.Player.LifecycleAcquire:output_type -> hege.reg.None
	54,  // 142: hege.reg.Player.LifecycleLeave:output_type -> hege.reg.None
	54,  // 143: hege.reg.Player.LifecycleAuto:output_type -> hege.reg.None
	23,  // 144: hege.reg.City.List:output_type -> hege.reg.CityKey
	31,  // 145: hege.reg.City.ShowAll:output_type -> hege.reg.CityView
	54,  // 146: hege.reg.City.Study:output_type -> hege.reg.None
	54,  // 147: hege.reg.City.Build:output_type -> hege.reg.None
	54,  // 148: hege.reg.City.Train:output_type -> hege.reg.None
	54,  // 149: hege.reg.City.CreateArmy:output_type -> hege.reg.None
	54,  // 150: hege.reg.City.CreateTransport:output_type -> hege.reg.None
	54,  // 151: hege.reg.City.TransferUnit:output_type -> hege.reg.None
	54,  // 152: hege.reg.City.TransferResources:output_type -> hege.reg.None
	3,   // 153: hege.reg.City.ListArmies:output_type -> hege.reg.ArmyName
	5,   // 154: hege.reg.Army.Show:output_type -> hege.reg.ArmyView
	54,  // 155: hege.reg.Army.Cancel:output_type -> hege.reg.None
	54,  // 156: hege.reg.Army.Flea:output_type -> hege.reg.None
	54,  // 157: hege.reg.Army.Flip:output_type -> hege.reg.None
	54,  // 158: hege.reg.Army.Move:output_type -> hege.reg.None
	54,  // 159: hege.reg.Army.Wait:output_type -> hege.reg.None
	54,  // 160: hege.reg.Army.Attack:output_type -> hege.reg.None
	54,  // 161: hege.reg.Army.Defend:output_type -> hege.reg.None
	54,  // 162: hege.reg.Army.Disband:output_type -> hege.reg.None
	119, // [119:163] is the sub-list for method output_type
	75,  // [75:119] is the sub-list for method input_type
	75,  // [75:75] is the sub-list for extension type_name
	75,  // [75:75] is the sub-list for extension extendee
	0,   // [0:75] is the sub-list for field type_name
}

func init() { file_region_proto_init() }
func file_region_proto_init() {
	if File_region_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_region_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArmyName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArmyId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArmyView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcesAbs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcesPlus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcesMult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcesMod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductionView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitTypeView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildingTypeRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildingTypePublic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildingTypePrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildingTypeView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildingView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeTypeView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnowledgeView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityConstants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityVars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityPolitics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityEvolution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Artifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityStatsRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LifecycleAbstractReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LifecycleAssignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArmyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferUnitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferResourcesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CitiesByOwnerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LifecycleConfigureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArmyMoveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArmyMoveArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArmyAssaultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArmyAssaultArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArmyTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArmyCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*None); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Created); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginatedU64Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_region_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginatedStrQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_region_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   8,
		},
		GoTypes:           file_region_proto_goTypes,
		DependencyIndexes: file_region_proto_depIdxs,
		EnumInfos:         file_region_proto_enumTypes,
		MessageInfos:      file_region_proto_msgTypes,
	}.Build()
	File_region_proto = out.File
	file_region_proto_rawDesc = nil
	file_region_proto_goTypes = nil
	file_region_proto_depIdxs = nil
}
